type Query {
    getUserById(id: ID!): User
    getUserByUsername(username: String!): User
    allUsers(page: Int!, size: Int!): UserPage
}

type Mutation {
    createUser(username: String!, password: String!, email: String!, fullName: String, bio: String, profilePictureUrl: String): User
}

type UserPage {
    users: [User]
    totalCount: Int
    hasNextPage: Boolean
    hasPreviousPage: Boolean
}

type User {
    id: ID!
    username: String!
    password: String!
    email: String!
    fullName: String
    bio: String
    profilePictureUrl: String
    createdAt: String
    updatedAt: String
    posts: [Post]
    followers: [Follower]
    followedList: [Followed]
}

type Post {
    id: ID!
    content: String
    createdAt: String
}

type Follower {
    id: ID!
    username: String
    fullName: String
}

type Followed {
    id: ID!
    username: String
    fullName: String
}
